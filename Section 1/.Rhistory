# Load the library
library(car)
# Load the data
prestige = data(Prestige)
install.packages("car")
# Load the library
library(car)
prestige = data(Prestige)
summary(prestige)
?Prestige
prestige = Prestige[,1:4]
y = prestige[,4] #using income as dependent variable
x = as.matrix(prestige[,1:3]) #using the three non-categorical predictors
x
y
x = cbind(1,x)
x
t(x)
A1 <- matrix(c(2, 1, -1,
-3, -1, 2,
-2,  1, 2), 3, 3, byrow=TRUE)
A
A1
solve(A1)
y
betacov = var(y) %*% solve(t(x) %*% x)
# Load the library
library(car)
# Load the data
prestige = data(Prestige)
# Look at the help file for details
?Prestige
# Get rid of categorical variables
prestige = Prestige[,1:4]
#split data
y = prestige[,4] #using income as dependent variable
x = as.matrix(prestige[,1:3]) #using the three non-categorical predictors
# add an intercept
x = cbind(1,x)
var(y)
aaa = t(x) %*% x
aaa
x %*% t(x)
betahat = solve(t(x) %*% x) %*% t(x) %*% y
betahat
var(y)
lm1 = lm(y~x-1)
summary(lm1)
betacovlm = vcov(lm1)
betacovlm
solve(t(x) %*% x)
var(y)
var(y)
var(y) %*% solve(t(x) %*% x)
betacov = var(y) * solve(t(x) %*% x)
betacov
eps = y-x %*% betahat
eps
sigma2 = var(eps)
sigma2
betacov = sigma2 * solve(t(x) %*% x)
sigma2
solve(t(x) %*% x)
solve(t(x) %*% x)*sigma2
solve(t(x) %*% x)*sigma2[1,1]
betacov = sigma2[1,1] * solve(t(x) %*% x)
betacov
sqrt(diag(betacovlm))
betacovlm
source('C:/Users/Zicheng Cai/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
sqrt(diag(betacov))
sqrt(diag(betacovlm))
install.packages("car")
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
sqrt(diag(betacov))
sqrt(diag(betacovlm))
length(eps)
sigma2 = var(eps) * length(eps) / (length((eps))-1)
sigma2
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
sqrt(diag(betacov))
sqrt(diag(betacovlm))
# Load the library
library(car)
# Load the data
prestige = data(Prestige)
# Look at the help file for details
?Prestige
# Get rid of categorical variables
prestige = Prestige[,1:4]
#split data
y = prestige[,4] #using income as dependent variable
x = as.matrix(prestige[,1:3]) #using the three non-categorical predictors
# add an intercept
x = cbind(1,x)
# compute the estimator
betahat = solve(t(x) %*% x) %*% t(x) %*% y
# Fill in the blank
eps = y-x %*% betahat
aaa = eps^2
aaa
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
betacov
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
betacov
betacovlm
eps
epsSquared
(length((eps))-1)
sigma2 = sum(epsSquared) / (length((eps))-1)
betacov = sigma2 * solve(t(x) %*% x)
mean(eps)
sigma2
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
sigma2
sigma2[1,1]
source('C:/Users/zc3763/Dropbox/Courses/18SP/SDS383D/git/SDS383D/Section 1/Section1.r')
sigma2
betacov = sigma2 * solve(t(x) %*% x)
lm1 = lm(y~x-1)
summary(lm1)
betacovlm = vcov(lm1)
sqrt(diag(betacovlm))
sqrt(diag(betacov))
sqrt(diag(betacovlm))
betacov
betacovlm
